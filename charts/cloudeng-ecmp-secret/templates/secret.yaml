{{- if eq .Values.platform "awsSecretsManager" }}
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: {{ .Values.roleArn | quote }}
  name: {{ .Values.serviceAccountName | quote }}
  namespace: {{ .Release.Namespace }}

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: external-secrets
  namespace: {{ .Release.Namespace }}
spec:
  provider:
    aws:
      service: SecretsManager
      region: {{ .Values.region | quote }}
      auth:
        jwt:
          serviceAccountRef:
            name: {{ .Values.serviceAccountName | quote }}
{{- end }}

{{- if eq .Values.platform "azureKeyVault" }}
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    azure.workload.identity/client-id: {{ .Values.msiClientId | quote }}
    azure.workload.identity/tenant-id: {{ .Values.tenantId | quote }}
  name: {{ .Values.serviceAccountName | quote }}
  namespace: {{ .Release.Namespace }}

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: external-secrets
  namespace: {{ .Release.Namespace }}
spec:
  provider:
    azurekv:
      authType: WorkloadIdentity
      vaultUrl: {{ .Values.vaultUrl | quote }}
      serviceAccountRef:
        name: {{ .Values.serviceAccountName | quote }}
{{- end }}

{{- range $k, $v := .Values.secrets }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $v.name | quote }}
  namespace: {{ $.Release.Namespace }}
spec:
  secretStoreRef:
    kind: SecretStore
    name: external-secrets
  target:
    name: {{ $v.name | quote }}
    creationPolicy: Owner
    deletionPolicy: Delete
    template:
      type: {{ $v.type | quote }}
  data:
    {{- range $k, $v :=  $v.secretData }}
    - secretKey: {{ $v.secretKey | quote }}
      remoteRef:
        key: {{ $v.remoteKey | quote }}
    {{- end }}
{{- end }}
